$appearances: "text", "filled";
$variants: "surface";
$sizes: "compact", "comfortable", "spacious";

.ids-action-item {
  width: 100%;
  display: inline-flex;
  flex-shrink: 0;
  align-items: center;
  justify-content: center;

  .ids-action-item-label {
    overflow: hidden;
    text-overflow: ellipsis;
    font-style: normal;
  }

  &.ids-action-item-compact {
    font-size: 12px;
    line-height: 16px;
    font-weight: 500;
  }

  &.ids-action-item-comfortable {
    font-size: 16px;
    line-height: 24px;
    font-weight: 500;
  }

  &.ids-action-item-spacious {
    font-size: 16px;
    line-height: 20px;
    font-weight: 600;
  }

  *[icon-leading],
  *[icon-trailing] {
    gap: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  @each $size in $sizes {
    &.ids-action-item-#{$size} {
      gap: var(--ids-comp-size-action-item-size-gap-#{$size});
      border-radius: var(--ids-comp-size-action-item-size-border-radius-#{$size});
      padding: var(--ids-comp-size-action-item-size-padding-y-#{$size}) var(--ids-comp-size-action-item-size-padding-x-#{$size});
      height: var(--ids-comp-size-action-item-size-height-#{$size});

      *[icon-leading],
      *[icon-trailing] {
        width: var(--ids-comp-action-item-size-#{$size}-icon);
        height: var(--ids-comp-action-item-size-#{$size}-icon);
      }

      @each $appearance in $appearances {
        @each $variant in $variants {
          &.ids-action-item-#{$appearance}.ids-action-item-#{$variant} {
            border: var(--ids-comp-size-action-item-size-border-width-#{$size}, 1px) solid var(--ids-comp-action-item-#{$appearance}-color-border-#{$variant}-enabled, rgba(255, 255, 255, 0.00));

            &:hover {
              border: var(--ids-comp-size-action-item-size-border-width-#{$size}, 1px) solid var(--ids-comp-action-item-#{$appearance}-color-border-#{$variant}-hovered, rgba(255, 255, 255, 0.00));
            }

            &:disabled {
              border: var(--ids-comp-size-action-item-size-border-width-#{$size}, 1px) solid var(--ids-comp-action-item-#{$appearance}-color-border-#{$variant}-disabled, rgba(255, 255, 255, 0.00));
            }
          }
        }
      }
    }
  }

  @each $appearance in $appearances {
    &.ids-action-item-#{$appearance} {
      @each $variant in $variants {
        &.ids-action-item-#{$variant} {
          color: var(--ids-comp-action-item-#{$appearance}-color-fg-label-#{$variant}-enabled);
          background:  var(--ids-comp-action-item-#{$appearance}-color-bg-#{$variant}-enabled);

          &.ids-action-item-active {
            color: var(--ids-comp-action-item-#{$appearance}-color-fg-label-#{$variant}-active);
            background: var(--ids-comp-action-item-#{$appearance}-color-bg-#{$variant}-active);
          }

          &:hover {
            color: var(--ids-comp-action-item-#{$appearance}-color-fg-label-#{$variant}-hovered);
            background: var(--ids-comp-action-item-#{$appearance}-color-bg-#{$variant}-hovered);
          }

          &:focus {
            color: var(--ids-comp-action-item-#{$appearance}-color-fg-label-#{$variant}-focused);
            background: var(--ids-comp-action-item-#{$appearance}-color-bg-#{$variant}-focused);
          }

          &:active {
            background: var(--ids-comp-action-item-#{$appearance}-color-bg-#{$variant}-pressed);
          }

          &:disabled {
            color: var(--ids-comp-action-item-#{$appearance}-color-fg-label-#{$variant}-disabled);
            background: var(--ids-comp-action-item-#{$appearance}-color-bg-#{$variant}-disabled);
          }
        }
      }
    }
  }
}
