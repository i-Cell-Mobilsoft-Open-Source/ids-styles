$appearances: text, filled;
$sizes: compact, comfortable, spacious, dense;

@mixin accordionAppearance($appearance, $state) {
  background: var(--ids-comp-accordion-summary-#{$appearance}-color-bg-default);
  border-color: var(--ids-comp-accordion-summary-#{$appearance}-color-border-default);
  color: var(--ids-comp-accordion-summary-#{$appearance}-color-fg-label-default);

  @if ($state == focused) {
    $lightOrDark: 'dark';
    // @if ($variant == 'light') {
    //   $lightOrDark: 'light';
    // }
    outline-color: var(--ids-comp-accordion-summary-focused-outline-color-#{$lightOrDark}-focused);
  }
}

.ids-accordion {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  width: 100%;
  background: var(--ids-comp-accordion-item-color-bg-default);

  & > .ids-accordion-summary {
    display: flex;
    align-items: center;
    width: 100%;
    box-sizing: border-box;
    border-style: solid;
    cursor: pointer;

    &:focus,
    &:focus-visible {
      outline-offset: 2px;
      outline-style: solid;
    }

    & > .ids-accordion-title {
      flex: 1 0 0;
      overflow: hidden;
      text-overflow: ellipsis;
      font-style: normal;
    }
  }

  &.ids-accordion-disabled > .ids-accordion-summary {
    pointer-events: none;
    user-select: none;
  }

  & > .ids-accordion-content {
    display: flex;
    flex-direction: column;
    background: var(--ids-comp-accordion-details-color-bg-default);
  }

  @each $size in $sizes {
    &.ids-accordion-#{$size} {
      padding: var(--ids-comp-accordion-item-size-padding-y-#{$size}) var(--ids-comp-accordion-item-size-padding-x-#{$size});
      gap: var(--ids-comp-accordion-item-size-gap-#{$size});
      border-radius: var(--ids-comp-accordion-item-size-border-radius-#{$size});

      & > .ids-accordion-summary {
        height: var(--ids-comp-accordion-summary-size-height-#{$size});
        padding: var(--ids-comp-accordion-summary-size-padding-y-#{$size}) var(--ids-comp-accordion-summary-size-padding-x-#{$size});
        gap: var(--ids-comp-accordion-summary-size-gap-#{$size});
        border-radius: var(--ids-comp-accordion-summary-size-border-radius-#{$size});
        border-width: var(--ids-comp-accordion-summary-size-border-width-#{$size});

        &:focus {
          outline-width: var(--ids-comp-accordion-summary-focused-outline-size-outline-#{$size});
        }

        & > .ids-accordion-title {
          font-family: var(--ids-comp-accordion-summary-typography-font-family-#{$size});
          font-size: var(--ids-comp-accordion-summary-typography-font-size-#{$size});
          font-weight: var(--ids-comp-accordion-summary-typography-font-weight-#{$size});
          letter-spacing: var(--ids-comp-accordion-summary-typography-letter-spacing-#{$size});
          line-height: var(--ids-comp-accordion-summary-typography-line-height-#{$size});
        }
      }

      & > .ids-accordion-content {
        padding: var(--ids-comp-accordion-details-size-padding-y-#{$size}) var(--ids-comp-accordion-details-size-padding-x-#{$size});
        gap: var(--ids-comp-accordion-details-size-gap-#{$size});
      }
    }
  }

  @each $appearance in $appearances {
    &.ids-accordion-#{$appearance} {
      & > .ids-accordion-summary {
        @include accordionAppearance($appearance, default);

        &:hover {
          background: var(--ids-comp-accordion-summary-#{$appearance}-color-bg-hovered);
          border-color: var(--ids-comp-accordion-summary-#{$appearance}-color-border-hovered);
          color: var(--ids-comp-accordion-summary-#{$appearance}-color-fg-label-hovered);
        }
        &:focus,
        &:focus-visible {
          @include accordionAppearance($appearance, focused);
        }

        &:active {
          @include accordionAppearance($appearance, pressed);
        }
      }

      &.ids-accordion-disabled > .ids-accordion-summary {
        @include accordionAppearance($appearance, disabled);
      }
    }
  }
}
